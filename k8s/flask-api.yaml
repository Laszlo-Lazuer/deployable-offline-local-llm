apiVersion: v1
kind: Service
metadata:
  name: flask-api
  namespace: llm-analysis
  labels:
    app: flask-api
spec:
  selector:
    app: flask-api
  ports:
    - port: 5000
      targetPort: 5000
      protocol: TCP
      name: http
  type: LoadBalancer  # Change to NodePort or ClusterIP with Ingress as needed
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: flask-api
  namespace: llm-analysis
spec:
  replicas: 2  # Scale horizontally for high availability
  selector:
    matchLabels:
      app: flask-api
  template:
    metadata:
      labels:
        app: flask-api
    spec:
      containers:
      - name: flask-api
        image: your-registry.io/local-llm-celery:latest  # UPDATE THIS
        imagePullPolicy: Always
        command: ["python", "app.py"]
        ports:
        - containerPort: 5000
          name: http
        env:
        - name: REDIS_URL
          valueFrom:
            configMapKeyRef:
              name: llm-config
              key: REDIS_URL
        volumeMounts:
        - name: data
          mountPath: /app/data
        resources:
          requests:
            memory: "256Mi"
            cpu: "200m"
          limits:
            memory: "1Gi"
            cpu: "1000m"
        livenessProbe:
          httpGet:
            path: /status/health
            port: 5000
          initialDelaySeconds: 30
          periodSeconds: 10
          timeoutSeconds: 5
          failureThreshold: 3
        readinessProbe:
          httpGet:
            path: /status/health
            port: 5000
          initialDelaySeconds: 10
          periodSeconds: 5
          timeoutSeconds: 3
          failureThreshold: 2
      volumes:
      - name: data
        persistentVolumeClaim:
          claimName: data-pvc
